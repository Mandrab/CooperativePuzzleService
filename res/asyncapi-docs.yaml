asyncapi: 2.0.0
info:
  title: Collaborative Puzzle Game - WebSocket API
  version: '1.0'
  description: >-
    These WebSocket API allows to add flavour function playing the cooperative puzzle game. These are not essential to develop a working client for the game, but allow a smarter use of game functions.
  license:
    name: GPL-2.0
    url: 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.html'

servers:
  default:
    url: localhost
    description: >-
      Actually, that project is not online and is accessible only through localhost. Clone the git repo to use it.
    variables:
      port:
        description: There is only one port to connect to that WebSocket.
        default: '80'
    protocol: ws

channels:
  /puzzle/{puzzleID}/user:
    parameters:
      puzzleID:
        description: ID of the puzzle on which push mouse positions
        schema:
          type: string
    publish:
      message:
        summary: Represent movement of a player pointer.
        payload:
          type: object
          properties:
            playerToken:
              type: string
              description: Player token given by puzzle service at subscription
            position:
              type: object
              properties:
                x:
                  type: integer
                y:
                  type: integer
              description: 2 dimensional position in the game-window
          description: Position of player pointer. It contains player\'s token and 2D position.
    subscribe:
      message:
        summary: Represent movement of a player pointer.
        payload:
          type: array
          items:
            type: object
            properties:
              playerID:
                type: string
                description: Player identifier
              position:
                type: object
                properties:
                  x:
                    type: integer
                  y:
                    type: integer
                description: 2 dimensional position in the game-window
            description: Player's ID and 2D position
          description: Positions of players pointers
